I"ÿ2<p>This chapter provides some background on how WebSTAR works and discusses some general administration issues.</p>

<h3 id="notes-about-http-connections">Notes About HTTP Connections</h3>

<p>The HyperText Transfer Protocol (HTTP) defines how a Web server handles connections. Unlike the File Transfer Protocol (FTP), in which a client opens a connection with a server, opens another connection to transfer data, and holds both connections open for the whole length of the session, HTTP opens a connection only for as long as needed to transfer the requested data. The connection is then closed immediately.</p>

<p>This method of handling connections has a few implications for the administrator of a Web server. First, there is no way for WebSTAR to keep track of where a connection leads. So, if a user requests data from your server, there is no way for the WebSTAR server itself to track which links are followed within that data, because the connection is closed once the original data is returned.</p>

<p>In the context of HTTP connections, you should also be aware that each separate element in a page requires its own connection. For example, a page of text requires one connection to download. If that page contains a graphic, another connection is required. So, connection information is not necessarily a reliable way of analyzing a server‚Äôs activity. For example, if you have a server with 5,000 connections a day serving a text document and you add a graphic to that document, you suddenly have a server with 10,000 connections a day.</p>

<h3 id="client-and-server-aspects-of-url-handling">Client and Server Aspects of URL Handling</h3>

<p>WWW client software is responsible for constructing the full URL for a document, which contains the server‚Äôs hostname and possibly a path to the folder containing the WebSTAR server. For example, this is a full URL to an HTML document:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://www.abc.com/sampledoc.html
</code></pre></div></div>

<p>The portion of this URL handled by WebSTAR is:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/sampledoc.html
</code></pre></div></div>

<p>WebSTAR handles only URLs relative to its own position on the disk. In effect, the ‚Äúroot‚Äù of the WebSTAR file system starts with the folder in which it resides.</p>

<blockquote>
  <p>The computer on which WebSTAR is running has an IP address, which is assigned in MacTCP or TCP/IP. Its hostname is assigned in the DNS server for your site. A machine can have more than one name. The WWW client software handles the DNS lookup to find the IP address that corresponds to the hostname in the URL.</p>
</blockquote>

<p>When the WebSTAR server receives an incoming URL, it performs the steps described below.</p>

<ol>
  <li>First, it converts the slashes in the URL to colons to obtain a Macintosh file path.</li>
  <li>The server then converts HTTP special characters (using %xx, where xx is the two-digit hex number of the special character).</li>
  <li>It replaces double-colons (::) with a single colon (:) to prevent clients from accessing parent directories in the Mac OS file system.</li>
  <li>It extracts the suffix of the requested file and uses it to determine the Actions to perform. If there is no suffix (or no suffix mapping specifying an Action), it examines the Macintosh file Type and Creator of the requested file and uses those fields to determine which Actions to perform.</li>
  <li>It determines if the requested filename (as modified by the preceding steps) is an alias and if so, translates it to the real path for the file.</li>
  <li>The server opens the file and performs the specified Action, or if no Action is specified, uses the appropriate file transfer method and default MIME type to return the data to the requesting client.</li>
</ol>

<blockquote>
  <p>Files served by WebSTAR cannot contain the $ character in their name.</p>
</blockquote>

<p>For more information on URLs, see the URL Primer described in ‚ÄúAdditional Information Resources‚Äù on page 16.</p>

<h4 id="client-and-server-aspects-of-external-process-execution">Client and Server Aspects of External Process Execution</h4>

<p>If the suffix of an incoming URL requires execution of a plug-in, a CGI application, or an ACGI application, the WebSTAR server simply packages up the incoming request and passes it to the specified application or plug-in directly. It doesn‚Äôt verify or translate the result before returning it to the client. In addition, the application or plug-in is expected to generate a complete HTTP header.</p>

<p>For example, if a user sends a form, the WWW client software is responsible for filling in the form before it is sent to WebSTAR. WebSTAR then packages this information and passes it to a CGI application or plug-in for processing.</p>

<p>When WebSTAR receives such information from a client, it passes the information to the application as parameters and returns the result to the client without modification. If the client receives erroneous data, both the client software and the CGI or plug-in itself are possible causes. It is also possible that an erroneous suffix mapping configuration could cause the server to use an inappropriate MIME type or transfer method.</p>

<p>If you run into problems with defaults or specific suffix mapping parameters, you can instruct users to configure their WWW clients appropriately. For example, for Microsoft Internet Explorer to ‚Äúunderstand‚Äù Excel files, a user may need to map the .XL suffix to a specific MIME type (such as application/excel) and then map the MIME type to a Helper application that can be launched to view the document. Then, when the user sends a URL like this:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://www.abc.com/bigbucks.xl
</code></pre></div></div>

<p>WebSTAR will send the file and appropriate header information containing the MIME type to the WWW client, and the client will know what is being returned and which Helper application to launch.</p>

<h4 id="client-and-server-aspects-of-file-transfers">Client and Server Aspects of File Transfers</h4>

<p>WebSTAR uses text/html as the default MIME type, unless you have configured a different default. So, if a client sends a URL requesting data and no suffix mapping or file Type mappings are found, WebSTAR assumes that the request is for an HTML document and sends it using the appropriate MIME type.</p>

<p>However, sometimes older WWW clients don‚Äôt use the MIME type information returned by WebSTAR. In that case, in the absence of obvious information about the data it is receiving, the client resorts to using its own built-in default, for example, MacBinary. This kind of cross-purpose use of defaults can cause a client to be unable to interpret a document.</p>

<h3 id="raw-files">RAW Files</h3>

<p>RAW file types are recognized by the server before any suffix mapping is verified. If WebSTAR receives a URL request and finds a Type and Creator indicating a RAW file, it simply returns the file‚Äôs contents as is. You can create RAW files that contain any kind of data.</p>

<p>For example, suppose you move an entire branch of your document tree to another computer. You can redirect incoming requests simply by creating a RAW file that contains a URL redirect header and new location. Replace the index file in that subdirectory with the RAW file, and client requests will retrieve the raw file, which redirects them to the new host. For more information about RAW files, see ‚ÄúRAW Files‚Äù on page 108.</p>

<h3 id="folder-and-filenames">Folder and Filenames</h3>

<p>Avoid spaces and special characters in any folder or filenames that WebSTAR will be serving. You must encode the special characters in filenames using the URL standard %xx encodings for each special character, where xx is the hexadecimal code for the ASCII character. For example, a space character (decimal 32, hexadecimal 20) would be encoded as %20). So, ‚Äúfile name‚Äù would be entered as ‚Äúfile%20name‚Äù.</p>

<p>If you are using security Realms to protect certain information, you must name folders and files appropriately to assign the proper access control. For example, if a private Realm is configured with the match string private, the URLs for all folders or files within that Realm must contain that match string. See ‚ÄúRealms‚Äù on page 52 for details.</p>

<h3 id="folder-and-file-aliases">Folder and File Aliases</h3>

<p>You can use aliases to folders and files that reside outside the WebSTAR folder, including those that reside on different volumes or different machines on the network. As long as the alias resides within the WebSTAR folder, URLs will work correctly.You can also use aliases to supply required filename suffixes without renaming the original files. WebSTAR uses the name of the alias for suffix mapping, and then translates the alias to find the original file‚Äôs contents.</p>

<blockquote>
  <p>Although you can use aliases to original files and folders that aren‚Äôt contained within the WebSTAR folder hierarchy, any URLs contained in the aliased files must still provide paths that are relative to the WebSTAR hierarchy. This is done for security purposes and isn‚Äôt subject to change.</p>
</blockquote>

<h3 id="warnings-about-plug-in-and-cgi-execution">Warnings About Plug-In and CGI Execution</h3>

<p>WebSTAR provides access to files within its own folder hierarchy. This is an important security feature. However, if you allow the WebSTAR server to execute plug-ins or CGIs, the burden falls on the programmer to make sure that only files and folders within that folder hierarchy can be accessed.</p>

<h3 id="warnings-about-macintosh-documents">Warnings About Macintosh Documents</h3>

<p>Macintosh documents, which have both a resource fork and a data fork, must be transferred as binary data and must contain all of their data in the data fork of the file. For example, you need to define suffix mappings for Excel or Word documents that ensure that those documents will be sent as binary data. See ‚ÄúSuffix Mapping‚Äù on page 41. The documents will not be viewable by users on machines that don‚Äôt possess applications capable of reading Macintosh files.</p>

<h3 id="creating-a-no-access-message">Creating a No Access Message</h3>

<p>A No Access file is returned when the client has been refused access to the site because of the Allow/Deny settings. The administrator has to create the No Access messages, which should state that access was denied and perhaps explain why. For example,</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Access Denied&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

Sorry, this site is restricted!


&lt;P&gt;&lt;EM&gt;Last Edited: November 15, 1996&lt;/EM&gt;&lt;BR&gt; 
&lt;/BODY&gt;
&lt;/HTML&gt;

The No Access file can be an HTML file or even a CGI application that gives different responses based on the address of the client. For example, you might return a message to all .COM addresses such as:

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Access Denied&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;

Sorry, this site is restricted to educational traffic!

&lt;P&gt;&lt;EM&gt;Last Edited: November 15, 1996&lt;/M &gt;&lt;BR&gt; 
&lt;/BODY&gt;
&lt;/HTML&gt;
</code></pre></div></div>

<p>See ‚ÄúNo Access‚Äù on page 63.</p>

<h3 id="running-multiple-webstar-servers">Running Multiple WebSTAR Servers</h3>

<p>If you want to have a WWW service that has some public and some private pages and you don‚Äôt want to use security Realms, you can run multiple WebSTAR servers on a single computer. One server can be set up with no access restrictions, while another restricts access to specified hosts.</p>

<p>All port numbers lower than 1024 are reserved for well-known services. WebSTAR is assigned port number 80 by default. If you are running multiple servers, you need to assign a different port number for the additional servers. Although you can use any unreserved, available port numbers, the convention is to use ports in the 8000 range (such as 8001) for additional WebSTAR servers.</p>

<p>See ‚ÄúPort‚Äù on page 59 for details on specifying an alternate port number for a selected WebSTAR server. When multiple servers are set up, URLs to the alternate servers (those not using port 80) must specify the right port number. For example:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://www.abc.com:8001/privatedoc.html
</code></pre></div></div>

<blockquote>
  <p>If you want to run multiple servers on different computers, you need a unique serial number for each WebSTAR server on the network. See ‚ÄúAbout WebSTAR‚Äù on the WebSTAR distribution media for guidelines in setting up multiple servers on a network to distribute the processing load.</p>
</blockquote>
:ET